// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package miner

import (
	"github.com/multivactech/MultiVAC/interface/iabci"
	"github.com/multivactech/MultiVAC/interface/iblockchain"
	"github.com/multivactech/MultiVAC/interface/iconsensus"
	"github.com/multivactech/MultiVAC/interface/idepositpool"
	"github.com/multivactech/MultiVAC/model/shard"
	"github.com/multivactech/MultiVAC/processor/miner/appblockchain"
	"github.com/multivactech/MultiVAC/processor/miner/consensus"
	"github.com/multivactech/MultiVAC/processor/shared/message"
)

// Injectors from injector.go:

func NewProcessor(blockChain iblockchain.BlockChain, params *consensus.Params, shardIndex shard.Index, selector iconsensus.Sortitionor, dPool idepositpool.DepositPool, pubSubMgr *message.PubSubManager) *Processor {
	appBlockChain := appblockchain.NewAppBlockChain(shardIndex, blockChain, dPool, pubSubMgr)
	iconsensusConsensus := consensus.NewExecutor(appBlockChain, selector, params)
	processor := provideProcessor(shardIndex, appBlockChain, blockChain, iconsensusConsensus)
	return processor
}

// injector.go:

func provideProcessor(shard2 shard.Index, abc iabci.AppBlockChain,
	blockChain iblockchain.BlockChain, c iconsensus.Consensus) *Processor {
	pcr := &Processor{shard: shard2, blockChain: blockChain}
	pcr.abci = abc
	pcr.consensusExecutor = c
	return pcr
}
