// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package storagenode

import (
	"fmt"
	"github.com/multivactech/MultiVAC/interface/iblockchain"
	"github.com/multivactech/MultiVAC/interface/idepositpool"
	"github.com/multivactech/MultiVAC/interface/iheartbeat"
	"github.com/multivactech/MultiVAC/logger"
	"github.com/multivactech/MultiVAC/logger/btclog"
	"github.com/multivactech/MultiVAC/model/shard"
)

// Injectors from injector.go:

func NewStorageProcessor(shard2 shard.Index, dataDir StorageDir, blockChain iblockchain.BlockChain, dPool idepositpool.DepositPool, heartBeatManager iheartbeat.HeartBeat) *Processor {
	logger := provideLogger(shard2)
	storagenodeStorageNode := newStorageNode(shard2, dataDir, blockChain, dPool, heartBeatManager)
	storagenodeThreadedStorageNode := newThreadedStorageNode(shard2, storagenodeStorageNode)
	processor := provideProcessor(logger, storagenodeThreadedStorageNode)
	return processor
}

// injector.go:

// StorageDir is defined as string type
type StorageDir string

func provideProcessor(logger btclog.Logger, sn *threadedStorageNode) *Processor {
	return &Processor{sn: sn, logger: logger}
}

func provideLogger(shard2 shard.Index) btclog.Logger {
	return logBackend.Logger(fmt.Sprintf("%s-%d", logger.StorageLoggerTag, shard2.GetID()))
}
